apiVersion: v1
kind: ConfigMap
metadata:
  name: sirato-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log	/var/log/nginx/access.log main;
      server {
          listen       80;
          server_name  _;
          location /api/ {
            proxy_pass http://sirato-api:8090/;
          }
          location / {
            proxy_pass http://sirato-web:3000/;
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: sirato-proxy
  name: sirato-proxy-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: sirato-proxy
  template:
    metadata:
      labels:
        run: sirato-proxy
    spec:
      containers:
      - name: sirato-proxy
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: sirato-nginx-conf
        - mountPath: /var/log/nginx
          name: log
      volumes:
      - name: sirato-nginx-conf
        configMap:
          name: sirato-nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: log
        emptyDir: {}
      restartPolicy: Always
---
---
apiVersion: v1
kind: Service
metadata:
  name: sirato-proxy
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    run: sirato-proxy
